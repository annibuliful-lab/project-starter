model Project {
    id             String           @id @db.Uuid
    title          String
    description    String?
    roles          ProjectRole[]
    createdAt      DateTime         @default(now()) @db.Timestamptz()
    updatedAt      DateTime?        @db.Timestamptz()
    createdBy      String
    updatedBy      String?
    ProjectAccount ProjectAccount[]

    @@map("projects")
}

model ProjectRole {
    id                    String                  @id @db.Uuid
    project               Project                 @relation(fields: [projectId], references: [id])
    projectId             String                  @db.Uuid
    title                 String                  @db.VarChar(32)
    ProjectAccount        ProjectAccount[]
    createdAt             DateTime                @default(now()) @db.Timestamptz()
    updatedAt             DateTime?               @db.Timestamptz()
    createdBy             String
    updatedBy             String?
    ProjectRolePermission ProjectRolePermission[]

    @@map("project_roles")
}

model ProjectRolePermission {
    id            String      @id @db.Uuid
    projectRole   ProjectRole @relation(fields: [projectRoleId], references: [id])
    permission    Permission  @relation(fields: [permissionId], references: [id])
    permissionId  String      @db.Uuid
    projectRoleId String      @db.Uuid
    createdAt     DateTime    @default(now()) @db.Timestamptz()
    updatedAt     DateTime?   @db.Timestamptz()
    createdBy     String
    updatedBy     String?

    @@unique([projectRoleId, permissionId])
    @@map("project_role_permission")
}

model ProjectAccount {
    id            String      @id @db.Uuid
    project       Project     @relation(fields: [projectId], references: [id])
    projectRole   ProjectRole @relation(fields: [projectRoleId], references: [id])
    account       Account     @relation(fields: [accountId], references: [id])
    projectRoleId String      @db.Uuid
    accountId     String      @db.Uuid
    createdAt     DateTime    @default(now()) @db.Timestamptz()
    updatedAt     DateTime?   @db.Timestamptz()
    createdBy     String
    updatedBy     String?
    projectId     String      @db.Uuid

    @@unique([accountId, projectRoleId])
    @@map("project_accounts")
}
